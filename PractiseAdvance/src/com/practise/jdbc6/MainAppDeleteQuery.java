package com.practise.jdbc6;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Scanner;

public class MainAppDeleteQuery {

	public static void main(String[] args) {

		//Resources used
		Connection connection = null;
		Statement statement = null;
		Scanner scanner = null;
		
		//Variables assosciated with student object
		int sid = 0;
		
		//url pattern
		String url = "jdbc:mysql://localhost:3306/Day6";
		String username = "root";
		String password = "abc123";
		
		try {
			scanner= new Scanner(System.in);
			System.out.print("Enter the sid:: ");
			sid=scanner.nextInt();
			
			//step.1 loading and registering driver 
			Class.forName("com.mysql.cj.jdbc.Driver");
			System.out.println("Connected to dB!!!");
		
			//step.2 creating the connection object
			connection = DriverManager.getConnection(url, username, password);
			if (connection != null) {
				System.out.println("Successfully established to dB!!!");
				//step.3 creating statement object and sending the query
				statement = connection.createStatement();
				
				if(statement != null) {
					String sqlDeleteQuery = "delete from student where sid="+sid;
					System.out.println("the query executed by dbe:: "+ sqlDeleteQuery);
					
					//step.4 Executing NonSelect Query int rowAffected
					int rowAffected = statement.executeUpdate(sqlDeleteQuery);
					
					//step.5 Processing the result generated by dbe
					if (rowAffected != 0) {
						System.out.println("No of records delected from dB:: " + rowAffected);
					}
				}
			} else {
				System.out.println("Connection to dB failed!");
			}
			} catch (SQLException e) {
				System.out.println("SQLExcpetion:: " +e.getMessage());
			} catch (ClassNotFoundException e1) {
				System.out.println("SQLExcpetion:: " +e1.getMessage());
			}
		finally {
			
			if (statement != null) {
				try {
					statement.close();
				} catch (SQLException sqlException) {
					System.out.println(sqlException.getMessage());
				}
			}
			if (connection != null) {
				try {
					statement.close();
				} catch (SQLException sqlException) {
					System.out.println(sqlException.getMessage());
				}
			}
			
			// closing i/o streams
			if (scanner != null) {
				try {
					scanner.close();
				} catch (Exception Exception) {
					System.out.println(Exception.getMessage());
				}
			}
		}
	}
}