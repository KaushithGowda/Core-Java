package com.practise.jdbc6;


import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Scanner;

/*WAP to perform Insert(create) operation on the table called student*/

public class MainAppInsertQuery {

	public static void main(String[] args) {

		// resources used
		Connection connection = null;
		Statement statement = null;
		ResultSet resultSet = null;
		Scanner scan = null;
		
		//variables associated with student object
		int sid = 0;
		String sname = null;
		int sage = 0;
		
		//urlpattern::"protocolName:subprotocolName:<ipaddress_db_Machine>:<port_no>/<dbName>"
		String url="jdbc:mysql://localhost:3306/day6";
		String user="root";
		String password="abc123";
		
	  try {
		  
		  scan = new Scanner(System.in);
		  if (scan != null ) {
			  System.out.print("enter the sid:: ");
			  sid = scan.nextInt();
			  
			  System.out.print("enter the sname:: ");
			  sname = scan.next();
			  
			  System.out.print("enter the sage:: ");
			  sage = scan.nextInt();
		  }
			//step.1 loading and registering the driver
			Class.forName("com.mysql.cj.jdbc.Driver");
			System.out.println("Database loaded and locked--->");
			
			//step.2 establishing the connection between java application and database(mysql)
			connection  = DriverManager.getConnection(url,user,password);
			
			if(connection != null) {
				System.out.println("Connected to database successfully...!");
			
				//step.3 create the statement object to perform query operation
				statement = connection.createStatement();		
				
				if (statement != null) {
					String sqlInsertQuery = "insert into student(sid,sname,sage) values("+sid+",'"+sname+"',"+sage+")";
				
					//executing nonSelect Query
					int rowsAffected = statement.executeUpdate(sqlInsertQuery);
					
					//processing the result generated by dbe
					if(rowsAffected == -1) {
						System.out.println("insertion failed");
					} else {
						System.out.println("no of rows inserted into db :: " + rowsAffected);
					}
				}
		          }
		} catch (ClassNotFoundException e) {
                System.out.println("the cause of exception:: " +e.getMessage());			
		} catch (SQLException sqlException) {
			  if (sqlException.getErrorCode()==1062) {
				   	System.out.println("duplicate entries are not allowed");
			} else if(sqlException.getErrorCode()==1054) {
					System.out.println("properly specify the column values");
			} else if(sqlException.getErrorCode()==1064) {
					System.out.println("SQL sntax error");
			} else {
					System.out.println("unknown exception");
			}
		} finally {
			
			//step.6 resources closed
			
			try {
				if(resultSet != null) {
					statement.close();
				}
			} catch (SQLException sqlException) {
				System.out.println("the cause of exception:: " +sqlException.getMessage());			
			}
			try {
				  if(statement != null) {
					statement.close();
				}
			} catch (SQLException sqlException) {
				System.out.println("the cause of exception:: " +sqlException.getMessage());			
		    }
		    try {
			     if(connection != null) {
					connection.close();
				} 
		    } catch (SQLException sqlException) {
			System.out.println("the cause of exception:: " +sqlException.getMessage());			
	        }	
		    
		    //closing I/O stream resource
		    try {
		    	if(scan != null) {
		    		scan.close();
		    	}
		    }catch(Exception exception) {
		    	System.out.println(exception.getMessage());
		    }
		} 
	}
	
 }
	

